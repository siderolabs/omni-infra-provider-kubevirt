---
kind: common.Build
spec:
  ignoredPaths:
    - "hack/compose/docker-compose.override.yml"
---
kind: service.CodeCov
spec:
  # the tool should be tested by Omni integration tests
  enabled: false
---
kind: golang.Generate
spec:
  baseSpecPath: /api
  vtProtobufEnabled: true
  specs:
    - source: api/specs/specs.proto
      subdirectory: specs
---
kind: auto.CustomSteps
spec:
  steps:
    - name: docker-compose-up
      toplevel: true
    - name: docker-compose-down
      toplevel: true
    - name: run-integration-test
      toplevel: true
---
kind: custom.Step
name: docker-compose-up
spec:
  makefile:
    enabled: true
    phony: true
    script:
      - >-
        ARTIFACTS="$(ARTIFACTS)"
        SHA="$(SHA)"
        TAG="$(TAG)"
        USERNAME="$(USERNAME)"
        REGISTRY="$(REGISTRY)"
        PROTOBUF_TS_VERSION="$(PROTOBUF_TS_VERSION)"
        NODE_BUILD_ARGS="$(NODE_BUILD_ARGS)"
        TOOLCHAIN="$(TOOLCHAIN)"
        CGO_ENABLED="$(CGO_ENABLED)"
        GO_BUILDFLAGS="$(GO_BUILDFLAGS)"
        GOLANGCILINT_VERSION="$(GOLANGCILINT_VERSION)"
        GOFUMPT_VERSION="$(GOFUMPT_VERSION)"
        GOIMPORTS_VERSION="$(GOIMPORTS_VERSION)"
        PROTOBUF_GO_VERSION="$(PROTOBUF_GO_VERSION)"
        GRPC_GO_VERSION="$(GRPC_GO_VERSION)"
        GRPC_GATEWAY_VERSION="$(GRPC_GATEWAY_VERSION)"
        VTPROTOBUF_VERSION="$(VTPROTOBUF_VERSION)"
        DEEPCOPY_VERSION="$(DEEPCOPY_VERSION)"
        TESTPKGS="$(TESTPKGS)"
        COMPOSE_DOCKER_CLI_BUILD=1
        DOCKER_BUILDKIT=1
        GO_LDFLAGS="$(GO_LDFLAGS)"
        docker compose -p talemu --file ./hack/compose/docker-compose.yml --file ./hack/compose/docker-compose.override.yml up --build
---
kind: custom.Step
name: docker-compose-down
spec:
  makefile:
    enabled: true
    phony: true
    variables:
      - name: REMOVE_VOLUMES
        defaultValue: false
    script:
      - >-
        ARTIFACTS="$(ARTIFACTS)"
        SHA="$(SHA)"
        TAG="$(TAG)"
        USERNAME="$(USERNAME)"
        REGISTRY="$(REGISTRY)"
        PROTOBUF_TS_VERSION="$(PROTOBUF_TS_VERSION)"
        NODE_BUILD_ARGS="$(NODE_BUILD_ARGS)"
        TOOLCHAIN="$(TOOLCHAIN)"
        CGO_ENABLED="$(CGO_ENABLED)"
        GO_BUILDFLAGS="$(GO_BUILDFLAGS)"
        GOLANGCILINT_VERSION="$(GOLANGCILINT_VERSION)"
        GOFUMPT_VERSION="$(GOFUMPT_VERSION)"
        GOIMPORTS_VERSION="$(GOIMPORTS_VERSION)"
        PROTOBUF_GO_VERSION="$(PROTOBUF_GO_VERSION)"
        GRPC_GO_VERSION="$(GRPC_GO_VERSION)"
        GRPC_GATEWAY_VERSION="$(GRPC_GATEWAY_VERSION)"
        VTPROTOBUF_VERSION="$(VTPROTOBUF_VERSION)"
        DEEPCOPY_VERSION="$(DEEPCOPY_VERSION)"
        TESTPKGS="$(TESTPKGS)"
        COMPOSE_DOCKER_CLI_BUILD=1
        DOCKER_BUILDKIT=1
        GO_LDFLAGS="$(GO_LDFLAGS)"
        docker compose -p talemu --file ./hack/compose/docker-compose.yml --file ./hack/compose/docker-compose.override.yml down --rmi local --remove-orphans --volumes=$(REMOVE_VOLUMES)
---
kind: custom.Step
name: run-integration-test
spec:
  sudoInCI: true
  makefile:
    enabled: true
    depends:
      - omni-infra-provider-kubevirt
    script:
      - >-
        @hack/test/integration.sh
  ghaction:
    enabled: true
    sops: true
    artifacts:
      enabled: true
      extraPaths:
        - "!_out/omni/"
      additional:
        - name: talos-logs
          always: true
          continueOnError: true
          paths:
            - "~/.talos/clusters"
            - "!~/.talos/clusters/**/swtpm.log"
        - name: omni-logs
          always: true
          continueOnError: true
          paths:
            - "/tmp/kubevirt-e2e"
---
kind: common.SOPS
spec:
  enabled: true
  config: |-
    creation_rules:
      - age: age1xrpa9ujxxcj2u2gzfrzv8mxak4rts94a6y60ypurv6rs5cpr4e4sg95f0k
        # order: Andrey, Noel, Artem, Utku, Dmitriy
        pgp: >-
          15D5721F5F5BAF121495363EFE042E3D4085A811,
          CC51116A94490FA6FB3C18EB2401FCAE863A06CA,
          4919F560F0D35F80CF382D76E084A2DF1143C14D,
          966BC282A680D8BB3E8363E865933E76F0549B0D,
          AA5213AF261C1977AF38B03A94B473337258BFD5
